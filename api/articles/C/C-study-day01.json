{"title":"C study day01","uid":"f8bddff16c64cf44d055f0f968e054f2","slug":"C/C-study-day01","date":"2022-11-14T14:44:27.000Z","updated":"2022-11-18T01:51:13.380Z","comments":true,"path":"api/articles/C/C-study-day01.json","keywords":null,"cover":"/img/C.jpg","content":"<p>我觉得C语言足够难, 够我开一个档来学习, 但是我今天学C的目的是为了完成我的实验, 所以实验结束之后我估计就会搁置C一段时间. </p>\n<p><a href=\"https://www.bilibili.com/video/BV1q54y1q79w?p=7&vd_source=79f488fa065eee08ba72fa4d2ffc9a26\">学习传送门</a></p>\n<p>留着学吧,</p>\n<h2 id=\"Switch的技巧\"><a href=\"#Switch的技巧\" class=\"headerlink\" title=\"Switch的技巧\"></a>Switch的技巧</h2><p>下面是一般情况, </p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main() &#123;\nint x;\n\n&#x2F;&#x2F;输入x的值\nscanf(&quot;%d&quot;, &amp;x);\n\n&#x2F;&#x2F;作条件判断\nswitch (x) &#123;\n    case 1:\n        printf(&quot;星期一&quot;);\n        break;\n    case 2:\n        printf(&quot;星期二&quot;);\n        break;\n    case 3:\n        printf(&quot;星期三&quot;);\n        break;\n    case 4:\n        printf(&quot;星期四&quot;);\n        break;\n    case 5:\n        printf(&quot;星期五&quot;);\n        break;\n    case 6:\n        printf(&quot;星期六&quot;);\n        break;\n    case 7:\n        printf(&quot;星期天&quot;);\n        break;\n&#125;\n&#125;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>switch里面case只能是常量, 至少也得是常变量</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int x;\nint const y &#x3D; 1;\n\n&#x2F;&#x2F;输入x的值\nscanf(&quot;%d&quot;, &amp;x);\n\n&#x2F;&#x2F;作条件判断\nswitch (x) &#123;\n    case y:\n        printf(&quot;星期一&quot;);\n        break;\n&#125;</code></pre>\n\n\n</div>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main() &#123;\nint x;\n\n&#x2F;&#x2F;输入x的值\nscanf(&quot;%d&quot;, &amp;x);\n\n&#x2F;&#x2F;作条件判断\nswitch (x) &#123;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n        printf(&quot;workDay&quot;);\n        break;\n    case 6:\n    case 7:\n        printf(&quot;sunDay&quot;);\n        break;\n    default:\n        printf(&quot;输入错误&quot;);\n        break;\n&#125;\n&#125;</code></pre>\n\n\n<p>可以通过上面的方法, 简化switch的语法. </p>\n<h2 id=\"getchar-与持续输入与正确输入\"><a href=\"#getchar-与持续输入与正确输入\" class=\"headerlink\" title=\"getchar()与持续输入与正确输入\"></a><code>getchar()</code>与持续输入与正确输入</h2><h3 id=\"持续输入\"><a href=\"#持续输入\" class=\"headerlink\" title=\"持续输入\"></a>持续输入</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">\nint main() &#123;\n\t\n    &#x2F;&#x2F;getchar返回的是int值, 我要用int接受\n    int x;\n\n    &#x2F;&#x2F; 这里的判断还是判断x与EOF是否相等， 而EOF是 End of file 数值是-1, 键盘输入是ctrl + z\n    while ((x &#x3D; getchar()) !&#x3D; EOF)&#123;\n\n        &#x2F;&#x2F; 下面两种输入方式是相同的\n        putchar(x);\n        printf(&quot;%c&quot;, x);\n\n    &#125;\n\n\n&#125;\n</code></pre>\n\n<p>注意, 每次输入可输入多值, 但是还是按照一个字符一个字符处理.</p>\n<p>Windows的EOF输入通过 ctrl+z, 而linux则通过ctrl + d</p>\n<h3 id=\"正确输入\"><a href=\"#正确输入\" class=\"headerlink\" title=\"正确输入\"></a>正确输入</h3><p>c语言中有一个<strong>输入缓冲区</strong>的概念, 输入的值会存放在输入缓冲区, 我们输入字符串的时候, 我们输入的空格, 或者回车不会被<code>scanf(&quot;%s&quot;, str)</code>读取, 而多余的部分就会存放在输入缓冲区中. 下一个读取函数就会直接读取缓冲区中的内容, 所以我们要用<code>getchar()</code>来使得缓冲区清空. </p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main() &#123;\n\n    int x;\n    char str1[20] ;\n    char str2[20];\n\n    scanf(&quot;%s&quot;, str1);\n    \n    &#x2F;&#x2F; 注意这里用字符而不是字符串， 用&#39;&#39;而不用&quot;&quot;\n    while ((x &#x3D; getchar()) !&#x3D; &#39;\\n&#39;)&#123;\n        \n    &#125;\n\n    scanf(&quot;%s&quot;, str2);\n    printf(&quot;%s,%s\\n&quot;, str1, str2);\n    &#125;</code></pre>\n\n<p><img src=\"/post/C/C-study-day01/image-20221118092132216.png\" alt=\"image-20221118092132216\"></p>\n","feature":false,"text":"我觉得C语言足够难, 够我开一个档来学习, 但是我今天学C的目的是为了完成我的实验, 所以实验结束之后我估计就会搁置C一段时间. 学习传送门 留着学吧, Switch的技巧下面是一般情况, int main() &#123; int x; &#x2F;&#x2F;输入x的值 sc...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Study","slug":"Study","count":20,"path":"api/categories/Study.json"}],"tags":[{"name":"C","slug":"C","count":1,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Switch%E7%9A%84%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">Switch的技巧</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getchar-%E4%B8%8E%E6%8C%81%E7%BB%AD%E8%BE%93%E5%85%A5%E4%B8%8E%E6%AD%A3%E7%A1%AE%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">getchar()与持续输入与正确输入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%81%E7%BB%AD%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">持续输入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E7%A1%AE%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">正确输入</span></a></li></ol></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{"title":"MyBatis Mapper HelloWorld","uid":"39921d9204478d3700dd9ed949b5c503","slug":"MyBatis/Mybatis_res_HelloWorld","date":"2022-11-15T12:31:54.000Z","updated":"2022-11-16T09:49:53.156Z","comments":true,"path":"api/articles/MyBatis/Mybatis_res_HelloWorld.json","keywords":null,"cover":"/img/Mybatis.jfif","text":"JavaEE 三层架构表现层: 可视化用户接触层 业务层: 实现业务逻辑层 持久层: 数据库交互层 Mybatis就是作用在这 它是为了简化JDBC而产生的的一套框架 接下来的实验, 创建一个数据库, 一张表, 查询表里的所有数据: 入门_MyBatis中文网 1. 创建表 Cr...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Result","slug":"Result","count":5,"path":"api/categories/Result.json"}],"tags":[{"name":"MyBatis","slug":"MyBatis","count":2,"path":"api/tags/MyBatis.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true},"next_post":{"title":"MySql Study day01","uid":"fec74b413dc2868cc0a4ce6e062f6692","slug":"MySql/MySql-Study-day01","date":"2022-11-14T11:33:12.000Z","updated":"2022-11-15T03:40:04.690Z","comments":true,"path":"api/articles/MySql/MySql-Study-day01.json","keywords":null,"cover":"/img/mysql.jpg","text":"数据库设计一对一一般用于表拆分, 一张用于常用查询, 一张用于非常用查询, 通过设置唯一外键实现 一对多设置外键, 多的一放设置外键, 指向一的一放的主键. 多对多设置另一张表, 包含两个外键, 包含两个表的两个主键. 多表查询select 字段列表 from 表 where 字...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"Study","slug":"Study","count":20,"path":"api/categories/Study.json"}],"tags":[{"name":"MySql","slug":"MySql","count":1,"path":"api/tags/MySql.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true}}