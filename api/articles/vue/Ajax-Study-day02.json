{"title":"Ajax Study day02","uid":"75dae5aac09587a263fe4e6ca350f17e","slug":"vue/Ajax-Study-day02","date":"2022-12-01T13:44:29.000Z","updated":"2022-12-03T10:58:33.087Z","comments":true,"path":"api/articles/vue/Ajax-Study-day02.json","keywords":null,"cover":"/img/VUE.jpeg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>看了几天这个CCF考试, 被折磨了, 又看了看若依, 又被折磨了, 一堆东西不会, 真TMD.</p>\n<h1 id=\"jQuery\"><a href=\"#jQuery\" class=\"headerlink\" title=\"jQuery\"></a>jQuery</h1><h2 id=\"添加删除修改类\"><a href=\"#添加删除修改类\" class=\"headerlink\" title=\"添加删除修改类\"></a>添加删除修改类</h2><p>jQuery可以控制元素的类, 我们通过类来控制元素的样式, 所以修改样式也就通过修改类来实现了.</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&#39;.box&#39;).click(function ()&#123;\n\n    &#x2F;&#x2F; 有就删除, 没有添加\n    $(this).toggleClass(&quot;clickBox&quot;)\n    &#x2F;&#x2F;添加\n    $(this).addClass(&quot;clickBox&quot;)\n    &#x2F;&#x2F;删除\n    $(this).removeClass(&quot;clickBox&quot;)\n\n&#125;)</code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.box&#123;\n\n    background-color: wheat;\n    transition: all 0.5s;\n    margin: 0 auto;\n    text-align: center;\n&#125;\n\n.clickBox&#123;\n    background-color: red;\n    transform: rotate(360deg);\n&#125;</code></pre>\n\n<p>用class更改和<strong>链式编程</strong>实现按钮功能:</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&#39;div.dropdown&#39;).click(function ()&#123;\n    $(this).toggleClass(&quot;dropdownClick&quot;).siblings().removeClass(&quot;dropdownClick&quot;)\n&#125;)</code></pre>\n\n<h2 id=\"贴一个api网址\"><a href=\"#贴一个api网址\" class=\"headerlink\" title=\"贴一个api网址\"></a>贴一个api网址</h2><p><a href=\"https://jquery.cuishifeng.cn/index.html\">jQuery API 中文文档 | jQuery API 中文在线手册 | jquery api 下载 | jquery api chm (cuishifeng.cn)</a></p>\n<h2 id=\"鼠标移入移出\"><a href=\"#鼠标移入移出\" class=\"headerlink\" title=\"鼠标移入移出\"></a>鼠标移入移出</h2><p>我们不必再用写两个方法来控制移入移出了, 一个方法就够了</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&#39;div.dropdown&#39;).hover(function ()&#123;\n    $(this).addClass(&quot;dropdownHover&quot;)\n&#125;, function ()&#123;\n    $(this).removeClass(&quot;dropdownHover&quot;)\n&#125;)</code></pre>\n\n<p><strong>还可以更简洁</strong></p>\n<p>只写一个方法, 意味着移入移出都调用这个方法;</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>在动画前加一个.stop()方法能阻止<strong>动画排队</strong></p>\n\n</div>\n<h2 id=\"关于元素数据的存储与获取\"><a href=\"#关于元素数据的存储与获取\" class=\"headerlink\" title=\"关于元素数据的存储与获取\"></a>关于元素数据的存储与获取</h2><p>有三种方法</p>\n<h3 id=\"获取修改固有数据\"><a href=\"#获取修改固有数据\" class=\"headerlink\" title=\"获取修改固有数据\"></a>获取修改固有数据</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log($(&quot;.list&quot;).prop(&quot;style&quot;));</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$(&quot;.list&quot;).prop(&quot;name&quot;, &quot;123&quot;);\nconsole.log($(&quot;.list&quot;).prop(&quot;name&quot;));</code></pre>\n\n<h3 id=\"自定义属性的修改与获取\"><a href=\"#自定义属性的修改与获取\" class=\"headerlink\" title=\"自定义属性的修改与获取\"></a>自定义属性的修改与获取</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log($(&quot;.list&quot;).attr(&quot;index&quot;))\n&#x2F;&#x2F;undefined\n$(&quot;.list&quot;).attr(&quot;index&quot;, 5)\nconsole.log($(&quot;.list&quot;).attr(&quot;index&quot;))\n&#x2F;&#x2F;5</code></pre>\n\n\n\n<h1 id=\"Ajax\"><a href=\"#Ajax\" class=\"headerlink\" title=\"Ajax\"></a>Ajax</h1><p>Ajax的特点在于它能实现不刷新页面的情况下实现与服务器的请求, 比如百度的关键词请求, 检测用户名是否存在, 显示二级分类, 懒加载(用则加载, 不用不加载), 新闻滚到底部加载新的内容. </p>\n<p>仍然使用的是<strong>js</strong>作为底板, 不是新的编程语言. </p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点:\"></a>缺点:</h2><ul>\n<li>没有浏览记录</li>\n<li>不可以跨域</li>\n<li>SEO(爬虫)不友好<ul>\n<li>爬虫爬不到, 因为是异步请求的信息, 在源代码中并没有相关信息</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h2><p>与<code>html</code>一样都是标签语言, 但是与html不同的是, 它没有预定义标签, 而且是用来传输数据和存储数据的, 但是现在基本用<code>json</code>了.</p>\n<h2 id=\"Http协议\"><a href=\"#Http协议\" class=\"headerlink\" title=\"Http协议\"></a>Http协议</h2><ul>\n<li>请求<ul>\n<li>请求行<ul>\n<li>URL</li>\n<li>请求方法</li>\n<li>…</li>\n</ul>\n</li>\n<li>请求头<ul>\n<li>键值对类型的数据</li>\n</ul>\n</li>\n<li>空行</li>\n<li>请求体<ul>\n<li>键值对类型的数据(只有post请求有请求体)</li>\n<li>在edge里的负载里</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>响应<ul>\n<li>响应行<ul>\n<li>http类型</li>\n<li>状态(200 404)</li>\n<li>…</li>\n</ul>\n</li>\n<li>响应头<ul>\n<li>编码</li>\n<li>长度</li>\n<li>…</li>\n</ul>\n</li>\n<li>空行</li>\n<li>响应体<ul>\n<li>html</li>\n<li>其他数数据</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Express\"><a href=\"#Express\" class=\"headerlink\" title=\"Express\"></a>Express</h2><p>基于node.js的极简web开发平台</p>\n<h3 id=\"helloworld\"><a href=\"#helloworld\" class=\"headerlink\" title=\"helloworld\"></a>helloworld</h3><ol>\n<li><p>新建立一个项目, 在终端输入:</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm init --yes</code></pre>\n\n<p>首先要安装node.js</p>\n</li>\n<li><p>导入包</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm i express</code></pre>\n</li>\n<li><p>输入代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;引入对象\nconst express &#x3D; require(&#39;express&#39;)\n\n&#x2F;&#x2F;创建应用对象\nconst app &#x3D; express()\n\n&#x2F;&#x2F;创建路由规则\n\napp.get(&#39;&#x2F;&#39;, function (request, response)&#123;\n    response.send(&quot;helloWorld&quot;)\n&#125;)\n\n&#x2F;&#x2F;监听端口\n\napp.listen(8000, function ()&#123;\n    console.log(&quot;服务以启动&quot;)\n&#125;)</code></pre>\n</li>\n<li><p>启动</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">PS C:\\Users\\Bincolo\\Desktop\\tmp\\Express\\src\\main\\webapp\\js\\helloworld&gt; \nnode .\\helloworldExpress.js\n</code></pre></li>\n</ol>\n<h2 id=\"利用Express写一个Ajax的简单程序\"><a href=\"#利用Express写一个Ajax的简单程序\" class=\"headerlink\" title=\"利用Express写一个Ajax的简单程序\"></a>利用Express写一个Ajax的简单程序</h2><p>用的jQuery</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;title&gt;sendMessage&lt;&#x2F;title&gt;\n  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;..&#x2F;..&#x2F;js&#x2F;jQ.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;&#x2F;head&gt;\n\n&lt;style&gt;\n  #result&#123;\n    height: 500px;\n    width: 300px;\n    border: 2px solid black;\n  &#125;\n&lt;&#x2F;style&gt;\n\n&lt;body&gt;\n\n&lt;button id&#x3D;&quot;getMessage&quot;&gt;获取数据&lt;&#x2F;button&gt;\n&lt;div id&#x3D;&quot;result&quot;&gt;&lt;&#x2F;div&gt;\n\n&lt;&#x2F;body&gt;\n\n&lt;script&gt;\n\n    $(function ()&#123;\n        $(&#39;#getMessage&#39;).click(function ()&#123;\n\n            &#x2F;&#x2F;1:初始化创建对象\n            const xhr &#x3D; new XMLHttpRequest();\n            &#x2F;&#x2F;2:初始化, 设置请求方法和请求url\n            xhr.open(&#39;GET&#39;, &#39;http:&#x2F;&#x2F;localhost:8000&#x2F;sendMessage?a&#x3D;100&amp;b&#x3D;100&amp;c&#x3D;100&#39;)\n            &#x2F;&#x2F;3: 发送\n            xhr.send();\n\n            &#x2F;&#x2F;4:事件绑定. 处理服务器返回的结果\n            &#x2F;&#x2F;在xhr状态变化时, 会触发这个方法\n            &#x2F;&#x2F; 状态有五种, 按顺序为:\n            &#x2F;&#x2F; 0:未初始化, 1:创建对象, 2:初始化,3:发送请求\n            &#x2F;&#x2F;4:服务端返回的部分结果, 5:服务端返回的所有结果\n\n            xhr.onreadystatechange &#x3D; function ()&#123;\n                if(xhr.readyState &#x3D;&#x3D;&#x3D; 4)&#123;\n                    if (xhr.status &gt;&#x3D; 200 &amp;&amp; xhr.status &lt; 300)&#123;\n                        &#x2F;&#x2F;状态码\n                        console.log(xhr.status)\n                        &#x2F;&#x2F;状态字符串\n                        console.log(xhr.statusText)\n                        &#x2F;&#x2F;响应头\n                        console.log(xhr.getAllResponseHeaders())\n                        &#x2F;&#x2F;响应体\n                        console.log(xhr.response)\n\n                        $(&#39;#result&#39;).text(xhr.response)\n                    &#125;\n                &#125;\n            &#125;\n\n        &#125;)\n\n    &#125;)\n\n\n&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n <pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;引入对象\nconst express &#x3D; require(&#39;express&#39;)\n\n&#x2F;&#x2F;创建应用对象\nconst app &#x3D; express()\n\n&#x2F;&#x2F;创建路由规则\nlet x &#x3D; 0\napp.get(&#39;&#x2F;sendMessage&#39;, function (request, response)&#123;\n    response.setHeader(&#39;Access-Control-Allow-Origin&#39;, &quot;*&quot;)\n    x +&#x3D; 1\n    response.send(&quot;helloWorld&quot;+x)\n&#125;)\n\n&#x2F;&#x2F;监听端口\n\napp.listen(8000, function ()&#123;\n    console.log(&quot;服务以启动&quot;)\n&#125;)</code></pre>\n\n<h3 id=\"如何传参\"><a href=\"#如何传参\" class=\"headerlink\" title=\"如何传参\"></a>如何传参</h3><p>直接在url后面加就可以了</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">xhr.open(&#39;GET&#39;, &#39;http:&#x2F;&#x2F;localhost:8000&#x2F;sendMessage?a&#x3D;100&amp;b&#x3D;100&amp;c&#x3D;100&#39;)</code></pre>\n\n\n\n<h2 id=\"nodemon\"><a href=\"#nodemon\" class=\"headerlink\" title=\"nodemon\"></a>nodemon</h2><p>一款可以自动帮忙重启express服务器的插件</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install -g nodemon</code></pre>\n\n<p>之后启动服务用<code>nodemon</code></p>\n","feature":false,"text":"前言看了几天这个CCF考试, 被折磨了, 又看了看若依, 又被折磨了, 一堆东西不会, 真TMD. jQuery添加删除修改类jQuery可以控制元素的类, 我们通过类来控制元素的样式, 所以修改样式也就通过修改类来实现了. $(&#39;.box&#39;).click(fun...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"Study","slug":"Study","count":20,"path":"api/categories/Study.json"}],"tags":[{"name":"Ajax","slug":"Ajax","count":3,"path":"api/tags/Ajax.json"},{"name":"jQuery","slug":"jQuery","count":2,"path":"api/tags/jQuery.json"},{"name":"Express","slug":"Express","count":1,"path":"api/tags/Express.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#jQuery\"><span class=\"toc-text\">jQuery</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E4%BF%AE%E6%94%B9%E7%B1%BB\"><span class=\"toc-text\">添加删除修改类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%B4%E4%B8%80%E4%B8%AAapi%E7%BD%91%E5%9D%80\"><span class=\"toc-text\">贴一个api网址</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%85%A5%E7%A7%BB%E5%87%BA\"><span class=\"toc-text\">鼠标移入移出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%85%83%E7%B4%A0%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">关于元素数据的存储与获取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E4%BF%AE%E6%94%B9%E5%9B%BA%E6%9C%89%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">获取修改固有数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">自定义属性的修改与获取</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Ajax\"><span class=\"toc-text\">Ajax</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">缺点:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XML\"><span class=\"toc-text\">XML</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Http%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">Http协议</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Express\"><span class=\"toc-text\">Express</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#helloworld\"><span class=\"toc-text\">helloworld</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8Express%E5%86%99%E4%B8%80%E4%B8%AAAjax%E7%9A%84%E7%AE%80%E5%8D%95%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">利用Express写一个Ajax的简单程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BC%A0%E5%8F%82\"><span class=\"toc-text\">如何传参</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nodemon\"><span class=\"toc-text\">nodemon</span></a></li></ol></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{"title":"Ajax Study day03","uid":"3961be608d49dc29dafdd30815d4f1d9","slug":"vue/Ajax-Study-day03","date":"2022-12-03T10:59:16.000Z","updated":"2022-12-03T16:53:59.598Z","comments":true,"path":"api/articles/vue/Ajax-Study-day03.json","keywords":null,"cover":"/img/VUE.jpeg","text":"前言这个地方的技术实在是太乱了, 根本不好搞, 真的很烦. Ajax通过json返回请求JSON 是 JS 对象的字符串表示法，它使用文本表示一个 JS 对象的信息，本质是一个字符串。 const jsonStuff &#x3D; &#123; count: x, data: &...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Study","slug":"Study","count":20,"path":"api/categories/Study.json"}],"tags":[{"name":"Ajax","slug":"Ajax","count":3,"path":"api/tags/Ajax.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":false},"next_post":{"title":"Ajax Study day01","uid":"7995588ec8c84920145999cdc7166191","slug":"vue/Ajax-Study-day01","date":"2022-11-29T12:56:17.000Z","updated":"2022-12-03T03:57:49.648Z","comments":true,"path":"api/articles/vue/Ajax-Study-day01.json","keywords":null,"cover":"/img/VUE.jpeg","text":"前言摆烂了好久, 今天继续开始学习, 但是我觉得我学习的大头时间应该在寒假, 因为已经接近学期末了, 我也感觉时间不够用了, 这个学期压力确实大, 大的我头皮发麻. jQuery19-jQuery 基本不怎么用了, 但是还是学一点吧 它是对XMLHttpRequest的一种封装,...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Study","slug":"Study","count":20,"path":"api/categories/Study.json"}],"tags":[{"name":"Ajax","slug":"Ajax","count":3,"path":"api/tags/Ajax.json"},{"name":"jQuery","slug":"jQuery","count":2,"path":"api/tags/jQuery.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":false}}