{"title":"Mybatis Study day02","uid":"348916b1a49009463576057a41ee1394","slug":"MyBatis/Mybatis-Study-day02","date":"2022-11-16T10:13:42.000Z","updated":"2022-11-16T15:51:14.538Z","comments":true,"path":"api/articles/MyBatis/Mybatis-Study-day02.json","keywords":null,"cover":"/img/Mybatis.jfif","content":"<p>为什么只有day2没有day1呢, 因为day1直接当做指导性博客了.</p>\n<h2 id=\"如何使用resultMap对数据封装\"><a href=\"#如何使用resultMap对数据封装\" class=\"headerlink\" title=\"如何使用resultMap对数据封装\"></a>如何使用resultMap对数据封装</h2><p>在此之前, 要引入mybatisx的插件</p>\n<p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116181756881.png\" alt=\"image-20221116181756881\"></p>\n<h3 id=\"1-问题描述\"><a href=\"#1-问题描述\" class=\"headerlink\" title=\"1. 问题描述\"></a>1. 问题描述</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class User &#123;\n\n    private Integer id;\n\n    &#x2F;&#x2F; 现在出现了问题, 数据库中的对应命名是username, 但是我们用驼峰命名会出现不一致\n    private String userName;\n    private String password;\n    private String gender;\n    private String addr;\n    &#x2F;&#x2F;后面省略</code></pre>\n\n<h3 id=\"2-问题解决\"><a href=\"#2-问题解决\" class=\"headerlink\" title=\"2. 问题解决\"></a>2. 问题解决</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">    &lt;resultMap id&#x3D;&quot;UserResultMap&quot; type&#x3D;&quot;com.MyCompany.pojo.User&quot;&gt;\n&lt;!--        id用来完成主键字段的映射--&gt;\n&lt;!--        &lt;id    --&gt;\n        &lt;!---用result完成一般映射--&gt;\n        &lt;result column&#x3D;&quot;username&quot; property&#x3D;&quot;userName&quot;&#x2F;&gt;\n    &lt;&#x2F;resultMap&gt;\n    \n&lt;!--    注意后面的resultType改成Map--&gt;\n    &lt;select id&#x3D;&quot;selectAll&quot; resultMap&#x3D;&quot;UserResultMap&quot;&gt;\n        select *\n        from tb_user;\n    &lt;&#x2F;select&gt;</code></pre>\n\n<h2 id=\"myBatis条件查询\"><a href=\"#myBatis条件查询\" class=\"headerlink\" title=\"myBatis条件查询\"></a>myBatis条件查询</h2><p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116183551880.png\" alt=\"image-20221116183551880\"></p>\n<p>通过姓名和性别查找对应的用户信息:</p>\n<h3 id=\"1-编写查找语句\"><a href=\"#1-编写查找语句\" class=\"headerlink\" title=\"1. 编写查找语句\"></a>1. 编写查找语句</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;select id&#x3D;&quot;selectByNameAndGender&quot; resultMap&#x3D;&quot;UserResultMap&quot;&gt;\n\n    select * from tb_user\n             where username like #&#123;userName&#125; and\n                   gender like #&#123;gender&#125;;\n                   \n&lt;&#x2F;select&gt;</code></pre>\n\n<h3 id=\"传入参数三种方法\"><a href=\"#传入参数三种方法\" class=\"headerlink\" title=\"传入参数三种方法\"></a>传入参数三种方法</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public interface UserMapper &#123;\n\n&#x2F;&#x2F;    &#x2F;&#x2F;这里的方法返回类型需要和mapper中一致, 参数也要一致\n&#x2F;&#x2F;    &#x2F;&#x2F; 这里的方法名就是mapper中的id.\n&#x2F;&#x2F;    List&lt;User&gt; selectAll();\n\n    &#x2F;&#x2F; 通过标签传入参数, 标签中对应是#&#123;&#125;中的内容\n    List&lt;User&gt; selectByNameAndGender(@Param(&quot;userName&quot;)String userName, @Param(&quot;gender&quot;)String gender);\n\n    &#x2F;&#x2F; 通过类传递信息, 要类中的名字与#&#123;&#125;中相同\n    List&lt;User&gt; selectByNameAndGender(User user);\n    \n    &#x2F;&#x2F;通过字典传递参数, key &#x3D; #&#123;&#125;中的元素, value &#x3D; 对应的数据.\n    List&lt;User&gt; selectByNameAndGender(Map&lt;String,String&gt; map);\n\n\n\n&#125;</code></pre>\n\n<h3 id=\"main方法\"><a href=\"#main方法\" class=\"headerlink\" title=\"main方法:\"></a>main方法:</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; 注意, 这里要模糊查询, 因为要满足业务逻辑\nString name &#x3D; &quot;%王五%&quot;;\nString gender &#x3D; &quot;%男%&quot;;\n\nMap&lt;String, String&gt; map &#x3D; new HashMap&lt;String, String&gt;();\nmap.put(&quot;userName&quot;, name);\nmap.put(&quot;gender&quot;, gender);\n\nUser user &#x3D; new User();\nuser.setGender(gender);\nuser.setUserName(name);\n\n&#x2F;&#x2F;三种方法\nList&lt;User&gt; users1 &#x3D; mapper.selectByNameAndGender(name, gender);\nList&lt;User&gt; users2 &#x3D; mapper.selectByNameAndGender(map);\nList&lt;User&gt; users3 &#x3D; mapper.selectByNameAndGender(user);\n\n\nSystem.out.println(users1);\nSystem.out.println(users2);\nSystem.out.println(users3);\n\nsqlSession.close();</code></pre>\n\n<h2 id=\"动态sql\"><a href=\"#动态sql\" class=\"headerlink\" title=\"动态sql\"></a>动态sql</h2><p>myBatis提供了动态sql的能力, 是myBatis的强大功能之一. </p>\n<p>下面是它的标签: </p>\n<ul>\n<li>if</li>\n<li>choose (when, otherwise)</li>\n<li>trim (where, set)</li>\n<li>foreach</li>\n</ul>\n<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h3><p>比如我们希望用户输入null值时, 我们就忽略那一项查询条件:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;select id&#x3D;&quot;selectByNameAndGender&quot; resultMap&#x3D;&quot;UserResultMap&quot;&gt;\n\n    select * from tb_user\n    &lt;!--注意这里用where的标签, 不然会有sql语言格式问题--&gt;\n    &lt;where&gt;\n        \n        &lt;!--test里面写条件--&gt;\n    &lt;if test&#x3D;&quot;userName !&#x3D; null and userName !&#x3D; &#39;&#39;&quot;&gt;\n        and username like #&#123;userName&#125;\n    &lt;&#x2F;if&gt;\n\n    &lt;if test&#x3D;&quot;gender !&#x3D; null and gender !&#x3D; &#39;&#39;&quot;&gt;\n        and gender like #&#123;gender&#125;\n    &lt;&#x2F;if&gt;\n    &lt;&#x2F;where&gt;\n    ;\n\n&lt;&#x2F;select&gt;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>关于系统不给数据库相关提示的问题, 在sql方言的设置中, 设置</p>\n<p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116194939711.png\" alt=\"image-20221116194939711\"></p>\n\n</div>\n<h2 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h2><p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116195228247.png\" alt=\"image-20221116195228247\"></p>\n<p>注意提交事务</p>\n<h3 id=\"主键返回\"><a href=\"#主键返回\" class=\"headerlink\" title=\"主键返回\"></a>主键返回</h3><p>添加了的数据, 我们像要返回它们的主键, (因为主键不是用户输入的, 而是系统auto_increment的), 所以我们要求返回主键</p>\n<p>做法:</p>\n<p>首先设置默认提交, (或者也可以手动提交)</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">SqlSession sqlSession &#x3D; sqlSessionFactory.openSession(true);</code></pre>\n\n<p>设置xml, 注意上面的参数</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;insert id&#x3D;&quot;insertAll&quot; useGeneratedKeys&#x3D;&quot;true&quot; keyProperty&#x3D;&quot;id&quot;&gt;\n    insert into tb_user (username, password, gender, addr)\n    values (#&#123;userName&#125;, #&#123;password&#125;,#&#123;gender&#125;,#&#123;addr&#125;);\n&lt;&#x2F;insert&gt;</code></pre>\n\n<p>通过下面的代码实现回调</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">User user &#x3D; new User();\nuser.setUserName(&quot;老刘&quot;);\nuser.setGender(&quot;女&quot;);\nuser.setAddr(&quot;地球&quot;);\nuser.setPassword(&quot;123456&quot;);\n\nmapper.insertAll(user);\nSystem.out.println(user.getId());</code></pre>\n\n<h2 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h2><p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116201833277.png\" alt=\"image-20221116201833277\"></p>\n<h2 id=\"批量删除\"><a href=\"#批量删除\" class=\"headerlink\" title=\"批量删除\"></a>批量删除</h2><h3 id=\"1-设置接口\"><a href=\"#1-设置接口\" class=\"headerlink\" title=\"1.设置接口\"></a>1.设置接口</h3><p>注意标签</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">void deleteByIds(@Param(&quot;ids&quot;) List&lt;Integer&gt; ids);</code></pre>\n\n<h3 id=\"2-设置mapper\"><a href=\"#2-设置mapper\" class=\"headerlink\" title=\"2. 设置mapper\"></a>2. 设置mapper</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;delete id&#x3D;&quot;deleteByIds&quot;&gt;\n    delete from tb_user where id\n    in\n        &lt;foreach collection&#x3D;&quot;ids&quot; item&#x3D;&quot;id&quot; separator&#x3D;&quot;,&quot; open&#x3D;&quot;(&quot; close&#x3D;&quot;);&quot;&gt;\n            #&#123;id&#125;\n        &lt;&#x2F;foreach&gt;\n\n&lt;&#x2F;delete&gt;</code></pre>\n\n<p>注意上面的collection要与标签中一致</p>\n<h3 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3.测试\"></a>3.测试</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">List&lt;Integer&gt; ids &#x3D; new ArrayList&lt;Integer&gt;();\nids.add(7);\nids.add(8);\n\nmapper.deleteByIds(ids);</code></pre>\n\n\n\n<h2 id=\"深度理解Mybatis的参数注入\"><a href=\"#深度理解Mybatis的参数注入\" class=\"headerlink\" title=\"深度理解Mybatis的参数注入\"></a>深度理解Mybatis的参数注入</h2><p>Mybatis是通过字典的方式传递参数, 你输入一个参数, 参数前面跟注解<code>@param(&#39;key&#39;)</code>, 注解里面的内容就是这个字典的key, 而value就是你传入的数据, 所以在sql查询语句中, 你就是通过key得到那个数据. </p>\n<p>所以,如果你传入的是一个类, 你可以通过<code>.</code>的方法, 得到里面的数据:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;delete id&#x3D;&quot;deleteByIds&quot;&gt;\n    delete from tb_user where tb_user.username\n    in\n        &lt;foreach collection&#x3D;&quot;map&quot; item&#x3D;&quot;user&quot; separator&#x3D;&quot;,&quot; open&#x3D;&quot;(&quot; close&#x3D;&quot;);&quot;&gt;\n            #&#123;user.userName&#125;\n        &lt;&#x2F;foreach&gt;\n\n&lt;&#x2F;delete&gt;</code></pre>\n\n\n\n<h2 id=\"TheEND\"><a href=\"#TheEND\" class=\"headerlink\" title=\"TheEND\"></a>TheEND</h2><p>今天就学习到这了, 摆烂了一上午加一下午, 晚上和老师聊了聊当代青年的精神问题, 老师认为, 虽然现在年轻人吃穿不愁, 但是可能比老一辈日子过的还要苦, 他们很多老师都已经受不了现在的学生了. </p>\n<h2 id=\"注解开发\"><a href=\"#注解开发\" class=\"headerlink\" title=\"注解开发\"></a>注解开发</h2><p>再学半小时</p>\n<p><img src=\"/post/MyBatis/Mybatis-Study-day02/image-20221116233728520.png\" alt=\"image-20221116233728520\"></p>\n<p>明天开Http的坑</p>\n","feature":false,"text":"为什么只有day2没有day1呢, 因为day1直接当做指导性博客了. 如何使用resultMap对数据封装在此之前, 要引入mybatisx的插件 1. 问题描述public class User &#123; private Integer id; &#x2F;&#x2F; ...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Study","slug":"Study","count":15,"path":"api/categories/Study.json"}],"tags":[{"name":"MyBatis","slug":"MyBatis","count":2,"path":"api/tags/MyBatis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8resultMap%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">如何使用resultMap对数据封装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">1. 问题描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">2. 问题解决</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#myBatis%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">myBatis条件查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BC%96%E5%86%99%E6%9F%A5%E6%89%BE%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">1. 编写查找语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E5%85%A5%E5%8F%82%E6%95%B0%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">传入参数三种方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#main%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">main方法:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81sql\"><span class=\"toc-text\">动态sql</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if\"><span class=\"toc-text\">if</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">添加数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E9%94%AE%E8%BF%94%E5%9B%9E\"><span class=\"toc-text\">主键返回</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">修改数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">批量删除</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%AE%BE%E7%BD%AE%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">1.设置接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%AE%BE%E7%BD%AEmapper\"><span class=\"toc-text\">2. 设置mapper</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">3.测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%BA%A6%E7%90%86%E8%A7%A3Mybatis%E7%9A%84%E5%8F%82%E6%95%B0%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">深度理解Mybatis的参数注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TheEND\"><span class=\"toc-text\">TheEND</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">注解开发</span></a></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{"title":"javaScript Skill 01","uid":"c051c340bfcf71b6b3f4eb3eda1e06c5","slug":"HtmlCssJs/javaScript-Skill-01","date":"2022-11-17T04:50:00.000Z","updated":"2022-11-20T03:24:02.521Z","comments":true,"path":"api/articles/HtmlCssJs/javaScript-Skill-01.json","keywords":null,"cover":"/img/java-script.jpg","text":"这是我的第一篇关于skill的文章, 将来这个类别用于存放技巧性的内容. 关于检验数字将String转换为数字有两种方法: let x1 &#x3D; +&quot;123&quot;; &#x2F;&#x2F; 第一种, 前面加一个+号 x1 &#x3D; parseInt(x...","link":"","photos":[],"count_time":{"symbolsCount":478,"symbolsTime":"1 mins."},"categories":[{"name":"Skill","slug":"Skill","count":2,"path":"api/categories/Skill.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":2,"path":"api/tags/javaScript.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true},"next_post":{"title":"MyBatis Mapper HelloWorld","uid":"39921d9204478d3700dd9ed949b5c503","slug":"MyBatis/Mybatis_res_HelloWorld","date":"2022-11-15T12:31:54.000Z","updated":"2022-11-16T09:49:53.156Z","comments":true,"path":"api/articles/MyBatis/Mybatis_res_HelloWorld.json","keywords":null,"cover":"/img/Mybatis.jfif","text":"JavaEE 三层架构表现层: 可视化用户接触层 业务层: 实现业务逻辑层 持久层: 数据库交互层 Mybatis就是作用在这 它是为了简化JDBC而产生的的一套框架 接下来的实验, 创建一个数据库, 一张表, 查询表里的所有数据: 入门_MyBatis中文网 1. 创建表 Cr...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Result","slug":"Result","count":5,"path":"api/categories/Result.json"}],"tags":[{"name":"MyBatis","slug":"MyBatis","count":2,"path":"api/tags/MyBatis.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true}}