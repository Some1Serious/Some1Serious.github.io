{"title":"MyBatis study day01","uid":"7957ef06823b340dc739eb1014c53ddf","slug":"MyBatis/MyBatis-study-day01","date":"2022-11-15T12:31:54.000Z","updated":"2022-11-15T16:03:05.573Z","comments":true,"path":"api/articles/MyBatis/MyBatis-study-day01.json","keywords":null,"cover":"/img/Mybatis.jfif","content":"<h2 id=\"JavaEE-三层架构\"><a href=\"#JavaEE-三层架构\" class=\"headerlink\" title=\"JavaEE 三层架构\"></a>JavaEE 三层架构</h2><p>表现层: 可视化用户接触层</p>\n<p>业务层: 实现业务逻辑层</p>\n<p><strong>持久层: 数据库交互层</strong> Mybatis就是作用在这</p>\n<p><strong>它是为了简化JDBC而产生的的一套框架</strong></p>\n<p>接下来的实验, 创建一个数据库, 一张表, 查询表里的所有数据: </p>\n<p><img src=\"/post/MyBatis/MyBatis-study-day01/image-20221115203830763.png\" alt=\"image-20221115203830763\"></p>\n<hr>\n<p><a href=\"https://mybatis.net.cn/getting-started.html\">入门_MyBatis中文网</a></p>\n<h3 id=\"1-创建表\"><a href=\"#1-创建表\" class=\"headerlink\" title=\"1. 创建表\"></a>1. 创建表</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">\nCreate DATABASE Mybatis;\nUse Mybatis;\n\ndrop table if EXISTS tb_user;\n\ncreate table tb_user(\n\tid int PRIMARY KEY auto_increment,\n\tusername VARCHAR(20),\n\tpassword VARCHAR(20),\n\tgender char(1),\n\taddr VARCHAR(30)\n\t);\n\n\ninsert into tb_user VALUES (1, &#39;zhangsan&#39;,&#39;123&#39;, &#39;男&#39;, &#39;北京&#39;), (2, &#39;李四&#39;, &#39;234&#39;, &#39;女&#39;, &#39;天津&#39;), (3, &#39;王五&#39;, &#39;11&#39;, &#39;男&#39;, &#39;西安&#39;);</code></pre>\n\n<h3 id=\"2-创建项目-Maven依赖\"><a href=\"#2-创建项目-Maven依赖\" class=\"headerlink\" title=\"2. 创建项目, Maven依赖\"></a>2. 创建项目, Maven依赖</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;dependency&gt;\n  &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;3.5.11&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;8.0.29&lt;&#x2F;version&gt;\n\n&lt;&#x2F;dependency&gt;</code></pre>\n\n<h3 id=\"3-创建Mybatis-xml配置文件\"><a href=\"#3-创建Mybatis-xml配置文件\" class=\"headerlink\" title=\"3. 创建Mybatis xml配置文件\"></a>3. 创建Mybatis xml配置文件</h3><p>具体代码看官网, 只要注意更改里面数据库的信息就可以了, 还有注意xml配置文件的导入</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;\n\n&lt;configuration&gt;\n    &lt;environments default&#x3D;&quot;development&quot;&gt;\n        &lt;environment id&#x3D;&quot;development&quot;&gt;\n            &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;\n            &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;\n                &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.cj.jdbc.Driver&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;&#x2F;mybatis&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;Sxs12367&quot;&#x2F;&gt;\n            &lt;&#x2F;dataSource&gt;\n        &lt;&#x2F;environment&gt;\n    &lt;&#x2F;environments&gt;\n    &lt;mappers&gt;\n\n&lt;!--        这是查询xml的导入--&gt;\n        &lt;mapper resource&#x3D;&quot;UserMapper.xml&quot;&#x2F;&gt;\n    &lt;&#x2F;mappers&gt;\n&lt;&#x2F;configuration&gt;</code></pre>\n\n<h3 id=\"4-创建存储数据的类\"><a href=\"#4-创建存储数据的类\" class=\"headerlink\" title=\"4. 创建存储数据的类\"></a>4. 创建存储数据的类</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.MyCompany.pojo;\n\npublic class User &#123;\n\n    private Integer id;\n    private String username;\n    private String password;\n    private String gender;\n    private String addr;\n    \n    &#x2F;&#x2F;后面的getset方法, tostring方法全部省略</code></pre>\n\n<h3 id=\"5-创建映射器-Mapper\"><a href=\"#5-创建映射器-Mapper\" class=\"headerlink\" title=\"5. 创建映射器(Mapper)\"></a>5. 创建映射器(Mapper)</h3><p>这个映射器就是上面配置xml中添加的mapper</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE mapper\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;\n\n&lt;!--名称空间, 加上下面的id, 一起确定唯一查询语句--&gt;\n&lt;mapper namespace&#x3D;&quot;test&quot;&gt;\n    &lt;!--后面的resultType用于表示查询单挑数据存放的类, 就是我们创建的User类---&gt;\n    &lt;select id&#x3D;&quot;selectAll&quot; resultType&#x3D;&quot;com.MyCompany.pojo.User&quot;&gt;\n        select * from tb_user;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;mapper&gt;</code></pre>\n\n\n\n<h3 id=\"6-创建main方法-启动查询\"><a href=\"#6-创建main方法-启动查询\" class=\"headerlink\" title=\"6. 创建main方法, 启动查询\"></a>6. 创建main方法, 启动查询</h3><p>代码在官网都有, </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Mybatis_demo\n&#123;\n    public static void main( String[] args ) throws IOException &#123;\n\n        &#x2F;&#x2F;创建 SqlSessionFactory 工厂对象, 为了创建sqlSession对象\n        &#x2F;&#x2F; String传入myBatis配置文件\n        String resource &#x3D; &quot;mybatis-config.xml&quot;;\n        InputStream inputStream &#x3D; Resources.getResourceAsStream(resource);\n        SqlSessionFactory sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream);\n\n        &#x2F;&#x2F;创建SqlSession\n        SqlSession sqlSession &#x3D; sqlSessionFactory.openSession();\n\n        &#x2F;&#x2F;执行sql, 因为查询结果是一个List, 所以用List的方法, 参数就是名称空间.id\n        List&lt;User&gt; users &#x3D; sqlSession.selectList(&quot;test.selectAll&quot;);\n\n        System.out.println(users);\n\t\t\n        &#x2F;&#x2F;注意关掉查询\n        sqlSession.close();\n\n\n\n    &#125;\n&#125;</code></pre>\n\n<h3 id=\"最后的结构\"><a href=\"#最后的结构\" class=\"headerlink\" title=\"最后的结构\"></a>最后的结构</h3><p><img src=\"/post/MyBatis/MyBatis-study-day01/image-20221115214213363.png\" alt=\"image-20221115214213363\"></p>\n<h2 id=\"Mapper代理\"><a href=\"#Mapper代理\" class=\"headerlink\" title=\"Mapper代理\"></a>Mapper代理</h2><p><img src=\"/post/MyBatis/MyBatis-study-day01/image-20221115233501938.png\" alt=\"image-20221115233501938\"></p>\n<p>调用xml中的查询方法没有代码补全, 比较麻烦, 所以我们会用mapper代理开发sql查询语句</p>\n<h3 id=\"1-创建Mapper接口\"><a href=\"#1-创建Mapper接口\" class=\"headerlink\" title=\"1. 创建Mapper接口\"></a>1. 创建Mapper接口</h3><p>Mapper是一个接口, 但是它必须和sql映射文件同名, 并且放在同一目录下</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>创建包时,  报名之间的<code>.</code>可以使一个包变成一层层的文件夹, 但是创建普通文件夹的时候, 我们就要用如下的方法:</p>\n<p>“com&#x2F;MyCompany&#x2F;Mapper”</p>\n</p>\n</div>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public interface UserMapper &#123;\n\n    &#x2F;&#x2F;这里的方法返回类型需要和mapper中一致, 参数也要一致\n    &#x2F;&#x2F; 这里的方法名就是mapper中的id.\n    List&lt;User&gt; selectAll();\n\n&#125;</code></pre>\n\n<p>这样也是在同一目录下:</p>\n<p><img src=\"/post/MyBatis/MyBatis-study-day01/image-20221115234246372.png\" alt=\"image-20221115234246372\"></p>\n<h3 id=\"2-更新myBatis配置文件Mapper地址\"><a href=\"#2-更新myBatis配置文件Mapper地址\" class=\"headerlink\" title=\"2. 更新myBatis配置文件Mapper地址\"></a>2. 更新myBatis配置文件Mapper地址</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">    &lt;mappers&gt;\n\n&lt;!--        这是查询xml的导入--&gt;\n&lt;!--        &lt;mapper resource&#x3D;&quot;com&#x2F;MyCompany&#x2F;Mapper&#x2F;UserMapper.xml&quot;&#x2F;&gt;--&gt;\n&lt;!--        上面是单条导入, 一般用下面的方法, 直接整包导入--&gt;\n        &lt;package name&#x3D;&quot;com.MyCompany.Mapper&quot;&#x2F;&gt;\n    &lt;&#x2F;mappers&gt;</code></pre>\n\n<h3 id=\"3-更新Mapper配置文件中的namespace\"><a href=\"#3-更新Mapper配置文件中的namespace\" class=\"headerlink\" title=\"3. 更新Mapper配置文件中的namespace\"></a>3. 更新Mapper配置文件中的namespace</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!--名称空间--&gt;\n&lt;mapper namespace&#x3D;&quot;com.MyCompany.Mapper.UserMapper&quot;&gt;\n    &lt;select id&#x3D;&quot;selectAll&quot; resultType&#x3D;&quot;com.MyCompany.pojo.User&quot;&gt;\n        select *\n        from tb_user;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;mapper&gt;</code></pre>\n\n<p>注意, 要更新namespace为包目录下的对应接口</p>\n<h3 id=\"4-在main方法中更改\"><a href=\"#4-在main方法中更改\" class=\"headerlink\" title=\"4. 在main方法中更改\"></a>4. 在main方法中更改</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;创建SqlSession\n\nSqlSession sqlSession &#x3D; sqlSessionFactory.openSession();\n\n&#x2F;&#x2F;调用sqlSession方法得到相应的mapper类\nUserMapper mapper &#x3D; sqlSession.getMapper(UserMapper.class);\nList&lt;User&gt; users &#x3D; mapper.selectAll();\n\n\nSystem.out.println(users);</code></pre>\n\n<p>以后统一用mapper代理了. </p>\n","feature":true,"text":"JavaEE 三层架构表现层: 可视化用户接触层 业务层: 实现业务逻辑层 持久层: 数据库交互层 Mybatis就是作用在这 它是为了简化JDBC而产生的的一套框架 接下来的实验, 创建一个数据库, 一张表, 查询表里的所有数据: 入门_MyBatis中文网 1. 创建表 Cr...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Study","slug":"Study","count":12,"path":"api/categories/Study.json"}],"tags":[{"name":"MyBatis","slug":"MyBatis","count":1,"path":"api/tags/MyBatis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JavaEE-%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">JavaEE 三层架构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\">1. 创建表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE-Maven%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">2. 创建项目, Maven依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BAMybatis-xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3. 创建Mybatis xml配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%88%9B%E5%BB%BA%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E7%B1%BB\"><span class=\"toc-text\">4. 创建存储数据的类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%88%9B%E5%BB%BA%E6%98%A0%E5%B0%84%E5%99%A8-Mapper\"><span class=\"toc-text\">5. 创建映射器(Mapper)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E5%88%9B%E5%BB%BAmain%E6%96%B9%E6%B3%95-%E5%90%AF%E5%8A%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">6. 创建main方法, 启动查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">最后的结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Mapper%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">Mapper代理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BAMapper%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">1. 创建Mapper接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%9B%B4%E6%96%B0myBatis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6Mapper%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">2. 更新myBatis配置文件Mapper地址</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%9B%B4%E6%96%B0Mapper%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84namespace\"><span class=\"toc-text\">3. 更新Mapper配置文件中的namespace</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%9C%A8main%E6%96%B9%E6%B3%95%E4%B8%AD%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">4. 在main方法中更改</span></a></li></ol></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"MySql Study day01","uid":"fec74b413dc2868cc0a4ce6e062f6692","slug":"MySql/MySql-Study-day01","date":"2022-11-14T11:33:12.000Z","updated":"2022-11-15T03:40:04.690Z","comments":true,"path":"api/articles/MySql/MySql-Study-day01.json","keywords":null,"cover":"/img/mysql.jpg","text":"数据库设计一对一一般用于表拆分, 一张用于常用查询, 一张用于非常用查询, 通过设置唯一外键实现 一对多设置外键, 多的一放设置外键, 指向一的一放的主键. 多对多设置另一张表, 包含两个外键, 包含两个表的两个主键. 多表查询select 字段列表 from 表 where 字...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"Study","slug":"Study","count":12,"path":"api/categories/Study.json"}],"tags":[{"name":"MySql","slug":"MySql","count":1,"path":"api/tags/MySql.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true}}