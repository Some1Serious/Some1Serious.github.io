{"title":"javaWeb res Login","uid":"77fc4926e9ec82b27aeede85a82bd4f7","slug":"javaWeb/javaWeb-res-Login","date":"2022-11-19T01:50:27.000Z","updated":"2022-11-21T03:34:23.082Z","comments":true,"path":"api/articles/javaWeb/javaWeb-res-Login.json","keywords":null,"cover":"/img/javaWeb.png","content":"<p><img src=\"/post/javaWeb/javaWeb-res-Login/image-20221119095124141.png\" alt=\"image-20221119095124141\"></p>\n<h2 id=\"简述流程\"><a href=\"#简述流程\" class=\"headerlink\" title=\"简述流程\"></a>简述流程</h2><ol>\n<li>首先通过<code>Tomcat创建服务器</code>, 然后创建相应的网站页面, 这样我们可以<strong>访问网页</strong></li>\n<li>创建<strong>数据库</strong></li>\n<li>使用<strong>mybatis</strong>和<strong>mySql驱动</strong>, 创建存储类和<code>Mapper</code></li>\n<li>创建<code>servlet</code>, 编写业务逻辑</li>\n</ol>\n<h2 id=\"1-创建webapp-Maven引入包\"><a href=\"#1-创建webapp-Maven引入包\" class=\"headerlink\" title=\"1. 创建webapp, Maven引入包\"></a>1. 创建webapp, Maven引入包</h2><h3 id=\"从前台到后台-我们一共需要以下的包\"><a href=\"#从前台到后台-我们一共需要以下的包\" class=\"headerlink\" title=\"从前台到后台, 我们一共需要以下的包\"></a>从前台到后台, 我们一共需要以下的包</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!--myBatis的依赖--&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;3.5.11&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;\n\n&lt;!--servlet的依赖--&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;javax.servlet&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;javax.servlet-api&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;3.1.0&lt;&#x2F;version&gt;\n  &lt;scope&gt;provided&lt;&#x2F;scope&gt;\n&lt;&#x2F;dependency&gt;\n\n&lt;!--mysql驱动的依赖--&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;8.0.30&lt;&#x2F;version&gt;\n\n&lt;&#x2F;dependency&gt;\n\n&lt;!--测试的依赖--&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;junit&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;\n  &lt;version&gt;4.13.2&lt;&#x2F;version&gt;\n  &lt;scope&gt;test&lt;&#x2F;scope&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n\n<h3 id=\"配置Tomcat\"><a href=\"#配置Tomcat\" class=\"headerlink\" title=\"配置Tomcat\"></a>配置Tomcat</h3><p><a href=\"TomcatServlet/Tomcat-Servlet-study-day01\">传送门</a></p>\n<hr>\n<h2 id=\"2-创建Html文件\"><a href=\"#2-创建Html文件\" class=\"headerlink\" title=\"2. 创建Html文件\"></a>2. 创建Html文件</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;div&gt;\n  &lt;h2&gt;登录&lt;&#x2F;h2&gt;\n&lt;!--  注意这里的相对路径--&gt;&lt;!--如果要写全的话, 从包路径开始写--&gt;\n  &lt;form action&#x3D;&quot;LoginCheckServlet&quot; method&#x3D;&quot;post&quot;&gt;\n\n    &lt;label&gt;\n      登录:  &lt;!--这里的name是我们日后调用的名字--&gt;\n      &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;userName&quot;&gt;\n    &lt;&#x2F;label&gt;&lt;br&gt;\n\n    &lt;label&gt;\n      密码:\n      &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&gt;\n    &lt;&#x2F;label&gt;&lt;br&gt;\n\n    &lt;input type&#x3D;&quot;submit&quot;&gt;\n\n\n\n  &lt;&#x2F;form&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<h2 id=\"3-创建数据库\"><a href=\"#3-创建数据库\" class=\"headerlink\" title=\"3. 创建数据库\"></a>3. 创建数据库</h2><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">Create database LoLoginCheck;\nuse LoginCheck;\n\ndrop table if exists user;\ncreate table User(\n    id int primary key auto_increment,\n    username varchar(20) unique ,\n    password varchar(20)\n)</code></pre>\n\n<p>添加数据</p>\n<h2 id=\"4-创建myBatis\"><a href=\"#4-创建myBatis\" class=\"headerlink\" title=\"4. 创建myBatis\"></a>4. 创建<code>myBatis</code></h2><h3 id=\"1-在resources目录下-创建mybatis配置文件-mybatis-config-xml\"><a href=\"#1-在resources目录下-创建mybatis配置文件-mybatis-config-xml\" class=\"headerlink\" title=\"1. 在resources目录下, 创建mybatis配置文件(mybatis-config.xml)\"></a>1. 在<strong>resources</strong>目录下, 创建mybatis配置文件(mybatis-config.xml)</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;\n\n&lt;configuration&gt;\n    &lt;environments default&#x3D;&quot;development&quot;&gt;\n        &lt;environment id&#x3D;&quot;development&quot;&gt;\n            &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;\n            &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;\n                &lt;!--修改数据库相关属性--&gt;\n                &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.cj.jdbc.Driver&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;&#x2F;logincheck&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;Sxs12367&quot;&#x2F;&gt;\n            &lt;&#x2F;dataSource&gt;\n        &lt;&#x2F;environment&gt;\n    &lt;&#x2F;environments&gt;\n    &lt;mappers&gt;\n\n        &lt;!--        这是Mapperxml的导入--&gt;\n        &lt;!--这是导入包的方法, 写入一个包名, 自动扫描下面的配置--&gt;\n        &lt;package name&#x3D;&quot;com.myCompany.Mapper&quot;&#x2F;&gt;\n    &lt;&#x2F;mappers&gt;\n&lt;&#x2F;configuration&gt;</code></pre>\n\n<h3 id=\"2-创建User存储类\"><a href=\"#2-创建User存储类\" class=\"headerlink\" title=\"2. 创建User存储类\"></a>2. 创建User存储类</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class User &#123;\n\n    private int id;\n\n    private String userName;\n    private String password;</code></pre>\n\n<p>后面get set方法就不写了</p>\n<h3 id=\"3-创建Mapper接口-和配置文件\"><a href=\"#3-创建Mapper接口-和配置文件\" class=\"headerlink\" title=\"3. 创建Mapper接口, 和配置文件\"></a>3. 创建Mapper接口, 和配置文件</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>要在同一个文件目录下</p>\n\n</div>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE mapper\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;\n\n&lt;mapper namespace&#x3D;&quot;com.myCompany.Mapper.UserMapper&quot;&gt;\n    \n    &lt;!--用于同步数据库的名字和实体类的名字--&gt;\n    &lt;resultMap id&#x3D;&quot;UserResultMap&quot; type&#x3D;&quot;com.myCompany.pojo.User&quot;&gt;\n        &lt;!--        id用来完成主键字段的映射--&gt;\n        &lt;!--        &lt;id    --&gt;\n        &lt;!---用result完成一般映射--&gt;\n        &lt;result column&#x3D;&quot;username&quot; property&#x3D;&quot;userName&quot;&#x2F;&gt;\n    &lt;&#x2F;resultMap&gt;\n    \n    &lt;!--这里的id与接口中的方法名要一致--&gt;\n    &lt;select id&#x3D;&quot;checkIsRight&quot; resultMap&#x3D;&quot;UserResultMap&quot;&gt;\n        select *\n        from user\n        where username &#x3D; #&#123;userName&#125; and\n              password &#x3D; #&#123;password&#125;;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;mapper&gt;</code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public interface UserMapper &#123;\n\n    \n    User checkIsRight(@Param(&quot;userName&quot;)String userName, @Param(&quot;password&quot;)String password);\n\n\n&#125;</code></pre>\n\n<h2 id=\"4-编写servlet方法\"><a href=\"#4-编写servlet方法\" class=\"headerlink\" title=\"4. 编写servlet方法\"></a>4. 编写servlet方法</h2><p>:::warning</p>\n<p>下面的sqlSessionFactory会被重复创建, 因为以后可能要创建多个servlet, 所以我们要把它改成静态方法, <a href=\"javaWeb/Java-web-Study-day01\">Java-web-Study-day01</a></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.myCompany.servlet;\n\nimport com.myCompany.Mapper.UserMapper;\nimport com.myCompany.pojo.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.annotation.*;\nimport java.io.IOException;\nimport java.io.InputStream;\n&#x2F;&#x2F; 这里的要和页面中的action地址一致\n@WebServlet(value &#x3D; &quot;&#x2F;LoginCheckServlet&quot;)\npublic class LoginCheckServlet extends HttpServlet &#123;\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;\n\n        &#x2F;&#x2F;上面几行全是mybatis用于导入mapper的\n        String resource &#x3D; &quot;mybatis-config.xml&quot;;\n        InputStream inputStream &#x3D; Resources.getResourceAsStream(resource);\n        SqlSessionFactory sqlSessionFactory &#x3D; new SqlSessionFactoryBuilder().build(inputStream);\n\n        SqlSession sqlSession &#x3D; sqlSessionFactory.openSession();\n\n        &#x2F;&#x2F;得到mapper\n        UserMapper mapper &#x3D; sqlSession.getMapper(UserMapper.class);\n        &#x2F;&#x2F;------------------------------------------------------------------\n        \n        \n        &#x2F;&#x2F; 获取网页中的数据\n        String userName &#x3D; request.getParameter(&quot;userName&quot;);\n        String password &#x3D; request.getParameter(&quot;password&quot;);\n        \n        &#x2F;&#x2F;获取相应数据库中的数据\n        User user &#x3D; mapper.checkIsRight(userName, password);\n        \n        &#x2F;&#x2F;获取包路径\n        String contextPath &#x3D; request.getContextPath();\n        \n        &#x2F;&#x2F;业务逻辑判断\n        if (user !&#x3D; null)&#123;\n            response.sendRedirect(contextPath + &quot;&#x2F;afterLogIn&#x2F;success.html&quot;);\n        &#125;else &#123;\n            response.sendRedirect(contextPath + &quot;&#x2F;afterLogIn&#x2F;false.html&quot;);\n        &#125;\n        \n        &#x2F;&#x2F;记得关闭session\n        sqlSession.close();\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;\n        request.setCharacterEncoding(&quot;UTF-8&quot;);\n        this.doGet(request, response);\n    &#125;\n&#125;</code></pre>\n\n<h2 id=\"最后的结构\"><a href=\"#最后的结构\" class=\"headerlink\" title=\"最后的结构\"></a>最后的结构</h2><p><img src=\"/post/javaWeb/javaWeb-res-Login/image-20221119103012948.png\" alt=\"image-20221119103012948\"></p>\n","feature":true,"text":" 简述流程 首先通过Tomcat创建服务器, 然后创建相应的网站页面, 这样我们可以访问网页 创建数据库 使用mybatis和mySql驱动, 创建存储类和Mapper 创建servlet, 编写业务逻辑 1. 创建webapp, Maven引入包从前台到后台, 我们一共需要以下...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"Result","slug":"Result","count":5,"path":"api/categories/Result.json"}],"tags":[{"name":"javaWeb","slug":"javaWeb","count":5,"path":"api/tags/javaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E8%BF%B0%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">简述流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BAwebapp-Maven%E5%BC%95%E5%85%A5%E5%8C%85\"><span class=\"toc-text\">1. 创建webapp, Maven引入包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E5%89%8D%E5%8F%B0%E5%88%B0%E5%90%8E%E5%8F%B0-%E6%88%91%E4%BB%AC%E4%B8%80%E5%85%B1%E9%9C%80%E8%A6%81%E4%BB%A5%E4%B8%8B%E7%9A%84%E5%8C%85\"><span class=\"toc-text\">从前台到后台, 我们一共需要以下的包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AETomcat\"><span class=\"toc-text\">配置Tomcat</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BAHtml%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2. 创建Html文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">3. 创建数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%88%9B%E5%BB%BAmyBatis\"><span class=\"toc-text\">4. 创建myBatis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9C%A8resources%E7%9B%AE%E5%BD%95%E4%B8%8B-%E5%88%9B%E5%BB%BAmybatis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-mybatis-config-xml\"><span class=\"toc-text\">1. 在resources目录下, 创建mybatis配置文件(mybatis-config.xml)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BAUser%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">2. 创建User存储类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%9B%E5%BB%BAMapper%E6%8E%A5%E5%8F%A3-%E5%92%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3. 创建Mapper接口, 和配置文件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E7%BC%96%E5%86%99servlet%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">4. 编写servlet方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">最后的结构</span></a></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{"title":"javaWeb res CURD","uid":"45bc670afca0073bb4cc21c61b21c3c4","slug":"javaWeb/javaWeb-res-CURD","date":"2022-11-21T03:33:35.000Z","updated":"2022-11-21T11:24:12.288Z","comments":true,"path":"api/articles/javaWeb/javaWeb-res-CURD.json","keywords":null,"cover":"/img/javaWeb.png","text":"通过Mybatis, jsp,通过MVC架构实现增删改查 1. 创建webapp骨架, 导入依赖, 以及tomcat&lt;!--myBatis的依赖--&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;&#x2F;gro...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Result","slug":"Result","count":5,"path":"api/categories/Result.json"}],"tags":[{"name":"javaWeb","slug":"javaWeb","count":5,"path":"api/tags/javaWeb.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"vue/Vue-study-day03","date":"2023-01-17T09:50:48.096Z","updated":"2023-01-17T09:50:48.096Z","comments":true,"path":"api/articles/vue/Vue-study-day03.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}}}}