{"title":"Maven-Study-day01","uid":"c2a9e80eefc355aef707e141e0e47a0d","slug":"Maven/Maven-Study-day01","date":"2022-11-11T08:41:35.000Z","updated":"2022-11-17T09:02:07.102Z","comments":true,"path":"api/articles/Maven/Maven-Study-day01.json","keywords":null,"cover":"/img/apache-maven.png","content":"<p>学习<a href=\"https://www.bilibili.com/video/BV1Fz4y167p5?p=5&spm_id_from=pageDriver&vd_source=79f488fa065eee08ba72fa4d2ffc9a26\">传送门</a></p>\n<h2 id=\"Maven帮助我们下载管理依赖的包\"><a href=\"#Maven帮助我们下载管理依赖的包\" class=\"headerlink\" title=\"Maven帮助我们下载管理依赖的包\"></a>Maven帮助我们下载管理依赖的包</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;druid-spring-boot-starter&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;$&#123;druid.version&#125;&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n\n<p><code>groupId</code>: 实际的包的仓库路径, 也就是实际项目公司名称</p>\n<p><code>artifaceId</code>: 实际项目中的一个Maven模块(项目名), </p>\n<p><code>version</code>: 版本</p>\n<ol>\n<li>统一jar包依赖</li>\n<li>统一项目目录结构</li>\n<li>一致构建模型插件机制</li>\n</ol>\n<h3 id=\"Maven的统一项目结构\"><a href=\"#Maven的统一项目结构\" class=\"headerlink\" title=\"Maven的统一项目结构\"></a>Maven的统一项目结构</h3><p><img src=\"/post/Maven/Maven-Study-day01/image-20221111170518163.png\" alt=\"image-20221111170518163\"></p>\n<p>在若依项目中的体现:</p>\n<p><img src=\"/post/Maven/Maven-Study-day01/image-20221111170603005.png\" alt=\"image-20221111170603005\"></p>\n<p><code>pom.xml</code>是用来存放所有的依赖jar包和插件的</p>\n<p>至于<code>pom.xml</code>中的标签含义, 有一个超级pom中包含所有标签, 就在 <a href=\"https://www.runoob.com/maven/maven-pom.html\">传送门</a>下面的<strong>POM标签大全详解</strong>里. </p>\n<h3 id=\"Maven设置的xml与包路径设置\"><a href=\"#Maven设置的xml与包路径设置\" class=\"headerlink\" title=\"Maven设置的xml与包路径设置\"></a>Maven设置的xml与包路径设置</h3><p><img src=\"/post/Maven/Maven-Study-day01/image-20221111194958210.png\" alt=\"image-20221111194958210\"></p>\n<p>在xml中设置包路径如下图, 其中注意是用 <code>/</code>而不是<code>\\</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!-- 下载包的地址 --&gt;\n&lt;localRepository&gt;D:&#x2F;repository&lt;&#x2F;localRepository&gt;</code></pre>\n\n<p>还可以设置阿里云的镜像, 因为maven的服务器在国外, 下载很慢, 所以设置阿里的镜像会快一点</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;mirrors&gt;\n    &lt;mirror&gt;\n        &lt;id&gt;alimaven&lt;&#x2F;id&gt;\n        &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;\n        &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt;\n    &lt;&#x2F;mirror&gt;\n&lt;&#x2F;mirrors&gt;</code></pre>\n\n\n\n<h2 id=\"下面是创建Maven的过程\"><a href=\"#下面是创建Maven的过程\" class=\"headerlink\" title=\"下面是创建Maven的过程\"></a>下面是创建Maven的过程</h2><p><img src=\"/post/Maven/Maven-Study-day01/image-20221111220320831.png\" alt=\"image-20221111220320831\"></p>\n<p>其中<code>archetype</code>是指Maven的模板, 一般选择quickstart就行了, 有特殊需要再更换, 选错了不影响.</p>\n<p><img src=\"/post/Maven/Maven-Study-day01/image-20221111220744717.png\" alt=\"image-20221111220744717\"></p>\n<p>更改图中的设置</p>\n<p><img src=\"/post/Maven/Maven-Study-day01/image-20221111221141926.png\" alt=\"image-20221111221141926\"></p>\n<p>从图中的按钮处可以进入如图的页面, 进入该页面后可以输入相关命令, 方便执行. 执行的话就点击执行就可以了. </p>\n<p>插件放在:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;bulid&gt;\n\t&lt;plugins&gt;\n\t\t&lt;plugin&gt;\n            &lt;!--插件放在这里--&gt;\n        &lt;&#x2F;plugin&gt;\n    &lt;&#x2F;plugins&gt;\n&lt;&#x2F;bulid&gt;</code></pre>\n\n<h3 id=\"web项目的话-用jetty-轻量级快速-或者tomcat插件\"><a href=\"#web项目的话-用jetty-轻量级快速-或者tomcat插件\" class=\"headerlink\" title=\"web项目的话, 用jetty(轻量级快速)或者tomcat插件\"></a>web项目的话, 用jetty(轻量级快速)或者tomcat插件</h3><ol>\n<li>在Maven中插件导入</li>\n<li>更改一下Maven中的配置</li>\n<li>在启动项选择中加入启动命令</li>\n<li>启动</li>\n</ol>\n<hr>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>不行了, 跑步去了, 感觉要烂在椅子上了, 学习使我充实, 也使我疲倦. </p>\n</p>\n</div>\n<hr>\n<p>虽然已经是第二天了, 但是这是我既定的一天的学习内容, 所以仍然放在这篇博客. </p>\n<h2 id=\"Maven仓库类型\"><a href=\"#Maven仓库类型\" class=\"headerlink\" title=\"Maven仓库类型\"></a>Maven仓库类型</h2><h3 id=\"1-中央仓库\"><a href=\"#1-中央仓库\" class=\"headerlink\" title=\"1. 中央仓库\"></a>1. 中央仓库</h3><p>服务器在国外, 是Maven的主要仓库, 默认下载仓库</p>\n<h3 id=\"2-本地仓库\"><a href=\"#2-本地仓库\" class=\"headerlink\" title=\"2. 本地仓库\"></a>2. 本地仓库</h3><p>下载完成之后就存放在本地仓库, 每一个本地项目都从本地仓库中找, 找不到就去中央仓库中下载</p>\n<h3 id=\"3-私服\"><a href=\"#3-私服\" class=\"headerlink\" title=\"3. 私服\"></a>3. 私服</h3><p>局域网中的仓库, 一般在公司中使用, 更快的下载Maven插件</p>\n<h3 id=\"4-其他仓库\"><a href=\"#4-其他仓库\" class=\"headerlink\" title=\"4. 其他仓库\"></a>4. 其他仓库</h3><p>比如国内的阿里云镜像, 是中央仓库与私服的折中选择. </p>\n<h2 id=\"Maven中创建子模块\"><a href=\"#Maven中创建子模块\" class=\"headerlink\" title=\"Maven中创建子模块\"></a>Maven中创建子模块</h2><p>在父模块的目录上, 右键点击新模块. 而父模块的创建不需要选择Maven模板. </p>\n<hr>\n<h2 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h2><h3 id=\"实战传送门\"><a href=\"#实战传送门\" class=\"headerlink\" title=\"实战传送门\"></a><a href=\"Maven/Maven-res-01\">实战传送门</a></h3>","feature":false,"text":"学习传送门 Maven帮助我们下载管理依赖的包&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt; &lt;artifactId&gt;druid-spring-boot-starter&lt;&#x...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Study","slug":"Study","count":21,"path":"api/categories/Study.json"}],"tags":[{"name":"Maven","slug":"Maven","count":3,"path":"api/tags/Maven.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Maven%E5%B8%AE%E5%8A%A9%E6%88%91%E4%BB%AC%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E7%9A%84%E5%8C%85\"><span class=\"toc-text\">Maven帮助我们下载管理依赖的包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Maven%E7%9A%84%E7%BB%9F%E4%B8%80%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Maven的统一项目结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Maven%E8%AE%BE%E7%BD%AE%E7%9A%84xml%E4%B8%8E%E5%8C%85%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">Maven设置的xml与包路径设置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%88%9B%E5%BB%BAMaven%E7%9A%84%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">下面是创建Maven的过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#web%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AF%9D-%E7%94%A8jetty-%E8%BD%BB%E9%87%8F%E7%BA%A7%E5%BF%AB%E9%80%9F-%E6%88%96%E8%80%85tomcat%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">web项目的话, 用jetty(轻量级快速)或者tomcat插件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Maven%E4%BB%93%E5%BA%93%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Maven仓库类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1. 中央仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">2. 本地仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%A7%81%E6%9C%8D\"><span class=\"toc-text\">3. 私服</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%85%B6%E4%BB%96%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">4. 其他仓库</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Maven%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AD%90%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">Maven中创建子模块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E4%BC%A0%E9%80%81%E9%97%A8\"><span class=\"toc-text\">实战传送门</span></a></li></ol></li></ol>","author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"mapped":true,"prev_post":{"title":"Maven res 01 HelloWorld","uid":"76ec667c92deac2437fb208989cf59f5","slug":"Maven/Maven-res-01","date":"2022-11-12T03:14:14.000Z","updated":"2022-11-15T11:43:21.491Z","comments":true,"path":"api/articles/Maven/Maven-res-01.json","keywords":null,"cover":"/img/apache-maven.png","text":"学习传送门 目的描述​ 1. 创建一个Maven项目, 其中包括父类 maven_parent, 以及他的三个子模块maven_dao, maven_service, maven_controller ​ 2. 三个子模块的用途与依赖关系 maven_dao maven_serv...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"Result","slug":"Result","count":5,"path":"api/categories/Result.json"}],"tags":[{"name":"Maven","slug":"Maven","count":3,"path":"api/tags/Maven.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":false},"next_post":{"title":"springBoot-Study-day01","uid":"48f7fbdaf0e0dd4f6b63c39c2a27cf68","slug":"springBoot/springBoot-Study-day01","date":"2022-11-11T08:23:35.000Z","updated":"2022-11-13T10:49:11.577Z","comments":true,"path":"api/articles/springBoot/springBoot-Study-day01.json","keywords":null,"cover":"/img/springBoot.jpg","text":"先去学习Maven了, 真的和多米诺骨牌一样, 发现自己球也不懂. 学完Maven和Spring的IOC了, 今天开始学习springBoot springBoot是用来快速启动spring了, 解决了spring xml配置的繁琐和包文件的导入麻烦问题. 提示 SpringBo...","link":"","photos":[],"count_time":{"symbolsCount":280,"symbolsTime":"1 mins."},"categories":[{"name":"Study","slug":"Study","count":21,"path":"api/categories/Study.json"}],"tags":[{"name":"springBoot","slug":"springBoot","count":1,"path":"api/tags/springBoot.json"}],"author":{"name":"Someone Serious","slug":"blog-author","avatar":"/img/photo.jpg","link":"/","description":"here is someone serious <br />只是一个小学生, 学艺不精多多见谅","socials":{"github":"https://github.com/Some1Serious","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"QQ":{"icon":"/svg/QQ.svg","link":"/img/myQQ.png"},"Email":{"icon":"/svg/email-fill.svg","link":"mailto:1025698918@qq.com"}}}},"feature":true}}